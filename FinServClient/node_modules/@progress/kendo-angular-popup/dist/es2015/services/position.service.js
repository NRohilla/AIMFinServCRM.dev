import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { DOMService } from './dom.service';
import { eitherRect, replaceOffset } from '../util';
/**
 * @hidden
 */
let PositionService = class PositionService {
    constructor(_dom) {
        this._dom = _dom;
    }
    positionElement(settings) {
        const { anchor, currentLocation, positionMode, element, anchorAlign, elementAlign, collisions } = settings;
        const dom = this._dom;
        const viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);
        const anchorRect = eitherRect(dom.offset(anchor), currentLocation);
        const initialElementRect = replaceOffset(dom.staticOffset(element), currentLocation);
        const elementRect = this.elementRect(element, initialElementRect, positionMode);
        const result = dom.restrictToView({
            anchorAlign,
            anchorRect,
            collisions,
            elementAlign,
            elementRect,
            viewPort
        });
        return {
            flipped: result.flipped,
            offset: dom.addOffset(initialElementRect, result.offset)
        };
    }
    elementRect(element, rect, mode) {
        if (mode === 'fixed') {
            return rect;
        }
        return this._dom.removeScroll(rect, this._dom.scrollPosition(element));
    }
};
PositionService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__metadata("design:paramtypes", [DOMService])
], PositionService);
export { PositionService };
