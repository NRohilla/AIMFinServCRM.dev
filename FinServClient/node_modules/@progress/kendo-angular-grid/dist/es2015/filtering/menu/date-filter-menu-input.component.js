import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { ColumnComponent } from "../../columns/column.component";
import { FilterService } from '../filter.service';
import { SinglePopupService } from './single-popup.service';
import { filter } from 'rxjs/operators/filter';
/**
 * @hidden
 */
let DateFilterMenuInputComponent = class DateFilterMenuInputComponent {
    constructor(popupService) {
        this.popupService = popupService;
        this.operators = [];
    }
    open(picker) {
        this.subscription = this.popupService.onClose
            .pipe(filter(() => picker.isActive))
            .subscribe(e => e.preventDefault());
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array)
], DateFilterMenuInputComponent.prototype, "operators", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", ColumnComponent)
], DateFilterMenuInputComponent.prototype, "column", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DateFilterMenuInputComponent.prototype, "filter", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "operator", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DateFilterMenuInputComponent.prototype, "currentFilter", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", FilterService)
], DateFilterMenuInputComponent.prototype, "filterService", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "format", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], DateFilterMenuInputComponent.prototype, "formatPlaceholder", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "placeholder", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Date)
], DateFilterMenuInputComponent.prototype, "min", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Date)
], DateFilterMenuInputComponent.prototype, "max", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "activeView", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "bottomView", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], DateFilterMenuInputComponent.prototype, "topView", void 0);
DateFilterMenuInputComponent = tslib_1.__decorate([
    Component({
        selector: 'kendo-grid-date-filter-menu-input',
        template: `
        <kendo-grid-filter-menu-input-wrapper
            [column]="column"
            [filter]="filter"
            [operators]="operators"
            [defaultOperator]="operator"
            [currentFilter]="currentFilter"
            [filterService]="filterService"
            >
            <kendo-datepicker
                #picker
                kendoFilterInput
                (open)="open(picker)"
                [value]="currentFilter?.value"
                [placeholder]="placeholder"
                [formatPlaceholder]="formatPlaceholder"
                [format]="format"
                [min]="min"
                [max]="max"
                [activeView]="activeView"
                [bottomView]="bottomView"
                [topView]="topView"
                >
            </kendo-datepicker>
        </kendo-grid-filter-menu-input-wrapper>
    `
    }),
    tslib_1.__metadata("design:paramtypes", [SinglePopupService])
], DateFilterMenuInputComponent);
export { DateFilterMenuInputComponent };
