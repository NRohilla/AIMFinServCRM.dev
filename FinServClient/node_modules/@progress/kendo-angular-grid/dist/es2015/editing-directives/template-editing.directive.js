import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { RowEditingDirectiveBase } from './row-editing-directive-base';
import { GridComponent } from '../grid.component';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
/**
 * A directive which encapsulates the editing operations of the Grid when using the Template-Driven Angular Forms.
 */
let TemplateEditingDirective = class TemplateEditingDirective extends RowEditingDirectiveBase {
    constructor(grid, localDataChangesService) {
        super(grid, localDataChangesService);
        this.grid = grid;
        this.localDataChangesService = localDataChangesService;
    }
    editHandler(args) {
        super.editHandler(args);
        this.dataItem = args.dataItem;
        this.originalValues = {};
        this.editService.assignValues(this.originalValues, this.dataItem);
    }
    closeEditor(rowIndex) {
        if (this.dataItem) {
            this.editService.assignValues(this.dataItem, this.originalValues);
        }
        super.closeEditor(rowIndex);
    }
    createModel(args) {
        if (args.isNew) {
            return this.createNewItem();
        }
    }
    saveModel(args) {
        return args.dataItem;
    }
    clean() {
        super.clean();
        delete this.dataItem;
    }
};
tslib_1.__decorate([
    Input('kendoGridTemplateEditing'),
    tslib_1.__metadata("design:type", Function)
], TemplateEditingDirective.prototype, "createNewItem", void 0);
TemplateEditingDirective = tslib_1.__decorate([
    Directive({
        selector: '[kendoGridTemplateEditing]'
    }),
    tslib_1.__metadata("design:paramtypes", [GridComponent, LocalDataChangesService])
], TemplateEditingDirective);
export { TemplateEditingDirective };
