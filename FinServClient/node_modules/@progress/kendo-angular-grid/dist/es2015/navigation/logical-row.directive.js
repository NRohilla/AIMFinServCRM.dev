import * as tslib_1 from "tslib";
import { Directive, HostBinding, Input } from '@angular/core';
import { IdService } from '../common/id.service';
import { NavigationService } from './navigation.service';
/**
 * @hidden
 */
let LogicalRowDirective = class LogicalRowDirective {
    constructor(idService, navigation) {
        this.idService = idService;
        this.navigation = navigation;
        this.logicalSlaveRow = false;
        this.logicalSlaveCellsCount = 0;
    }
    get hostRole() {
        return this.logicalSlaveRow ? 'presentation' : 'row';
    }
    get ariaRowIndex() {
        return this.logicalRowIndex + 1;
    }
    get ariaOwns() {
        if (this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {
            return undefined;
        }
        const ids = [];
        const total = this.logicalCellsCount + this.logicalSlaveCellsCount;
        for (let cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {
            ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));
        }
        return ids.join(' ');
    }
    ngOnChanges(changes) {
        if (!this.logicalSlaveRow && changes.logicalRowIndex) {
            this.navigation.registerRow(this);
        }
    }
    ngOnDestroy() {
        if (!this.logicalSlaveRow) {
            this.navigation.unregisterRow(this);
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], LogicalRowDirective.prototype, "logicalRowIndex", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LogicalRowDirective.prototype, "logicalSlaveRow", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], LogicalRowDirective.prototype, "logicalCellsCount", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], LogicalRowDirective.prototype, "logicalSlaveCellsCount", void 0);
tslib_1.__decorate([
    HostBinding('attr.role'),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [])
], LogicalRowDirective.prototype, "hostRole", null);
tslib_1.__decorate([
    HostBinding('attr.aria-rowindex'),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [])
], LogicalRowDirective.prototype, "ariaRowIndex", null);
tslib_1.__decorate([
    HostBinding('attr.aria-owns'),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [])
], LogicalRowDirective.prototype, "ariaOwns", null);
LogicalRowDirective = tslib_1.__decorate([
    Directive({
        selector: '[kendoGridLogicalRow]'
    }),
    tslib_1.__metadata("design:paramtypes", [IdService,
        NavigationService])
], LogicalRowDirective);
export { LogicalRowDirective };
