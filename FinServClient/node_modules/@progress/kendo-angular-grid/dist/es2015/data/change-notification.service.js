import * as tslib_1 from "tslib";
import { EventEmitter, NgZone, Injectable } from '@angular/core';
import { take } from 'rxjs/operators/take';
/**
 * @hidden
 */
let ChangeNotificationService = class ChangeNotificationService {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.changes = new EventEmitter();
    }
    notify() {
        if (!this.subscription || this.subscription.closed) {
            this.subscription = this.ngZone.onStable
                .asObservable().pipe(take(1))
                .subscribe(() => this.changes.emit());
        }
    }
};
ChangeNotificationService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__metadata("design:paramtypes", [NgZone])
], ChangeNotificationService);
export { ChangeNotificationService };
