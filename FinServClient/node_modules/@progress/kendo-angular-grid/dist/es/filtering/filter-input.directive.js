import * as tslib_1 from "tslib";
import { Input, Directive, EventEmitter, Inject, Self } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
/**
 * @hidden
 */
var FilterInputDirective = /** @class */ (function () {
    function FilterInputDirective(valueAccessors) {
        this.change = new EventEmitter();
        this.accessor = valueAccessors[0];
    }
    Object.defineProperty(FilterInputDirective.prototype, "value", {
        set: function (value) {
            this.accessor.writeValue(value);
        },
        enumerable: true,
        configurable: true
    });
    FilterInputDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.accessor.registerOnChange(function (x) { return _this.change.emit(x); });
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], FilterInputDirective.prototype, "value", null);
    FilterInputDirective = tslib_1.__decorate([
        Directive({
            selector: '[kendoFilterInput]'
        }),
        tslib_1.__param(0, Self()), tslib_1.__param(0, Inject(NG_VALUE_ACCESSOR)),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], FilterInputDirective);
    return FilterInputDirective;
}());
export { FilterInputDirective };
