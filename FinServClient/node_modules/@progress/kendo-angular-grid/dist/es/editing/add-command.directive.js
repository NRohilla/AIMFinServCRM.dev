import * as tslib_1 from "tslib";
import { Directive, HostListener, HostBinding, Inject, Optional, ElementRef, Renderer2 as Renderer } from '@angular/core';
import { Button } from '@progress/kendo-angular-buttons';
import { RTL } from '@progress/kendo-angular-l10n';
import { EditService } from './edit.service';
/**
 * Represents the `add new item` command of the Grid.
 *
 * You can apply this directive to any `button` element inside a
 * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).
 *
 * When an associated button with the directive is clicked, the
 * [`add`]({% slug api_grid_gridcomponent %}#toc-add) event
 * is triggered. For more information, refer to the [editing example]({% slug editing_grid %}).
 *
 * @example
 * ```ts-no-run
 * <kendo-grid>
 *    <ng-template kendoGridToolbarTemplate>
 *       <button kendoGridAddCommand>Add new</button>
 *    </ng-template>
 * </kendo-grid>
 * ```
 */
var AddCommandDirective = /** @class */ (function (_super) {
    tslib_1.__extends(AddCommandDirective, _super);
    function AddCommandDirective(editService, element, renderer, rtl) {
        var _this = _super.call(this, element, renderer, null, rtl) || this;
        _this.editService = editService;
        return _this;
    }
    /**
     * @hidden
     */
    AddCommandDirective.prototype.click = function () {
        this.editService.beginAdd();
    };
    Object.defineProperty(AddCommandDirective.prototype, "buttonClass", {
        /**
         * @hidden
         */
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AddCommandDirective.prototype, "commandClass", {
        /**
         * @hidden
         */
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        HostListener('click'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], AddCommandDirective.prototype, "click", null);
    tslib_1.__decorate([
        HostBinding('class.k-button'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], AddCommandDirective.prototype, "buttonClass", null);
    tslib_1.__decorate([
        HostBinding('class.k-grid-add-command'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], AddCommandDirective.prototype, "commandClass", null);
    AddCommandDirective = tslib_1.__decorate([
        Directive({
            selector: '[kendoGridAddCommand]'
        }),
        tslib_1.__param(3, Optional()), tslib_1.__param(3, Inject(RTL)),
        tslib_1.__metadata("design:paramtypes", [EditService,
            ElementRef,
            Renderer, Boolean])
    ], AddCommandDirective);
    return AddCommandDirective;
}(Button));
export { AddCommandDirective };
