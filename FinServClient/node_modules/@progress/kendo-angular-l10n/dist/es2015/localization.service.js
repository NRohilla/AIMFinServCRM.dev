import * as tslib_1 from "tslib";
import { Inject, Injectable, Optional, InjectionToken } from '@angular/core';
import { MessageService } from './message.service';
/**
 * Localization prefix for the component messages.
 *
 * For internal use.
 * @hidden
 */
export const L10N_PREFIX = new InjectionToken('Localization key prefix');
/**
 * Component localization service.
 *
 * For internal use.
 * @hidden
 */
let LocalizationService = class LocalizationService {
    constructor(prefix, messageService) {
        this.prefix = prefix;
        this.messageService = messageService;
        this.dictionary = {};
    }
    get(shortKey) {
        const key = this.key(shortKey);
        return this.dictionary[key];
    }
    register(shortKey, value, override = false) {
        const key = this.key(shortKey);
        let message = value;
        if (!override) {
            if (this.dictionary.hasOwnProperty(key)) {
                return;
            }
            message = this.defaultValue(key, value);
        }
        this.dictionary[key] = message;
    }
    key(shortKey) {
        return this.prefix + '.' + shortKey;
    }
    defaultValue(key, value) {
        if (!this.messageService) {
            return value;
        }
        const alt = this.messageService.get(key);
        return (alt === undefined) ? value : alt;
    }
};
LocalizationService = tslib_1.__decorate([
    Injectable(),
    tslib_1.__param(0, Inject(L10N_PREFIX)),
    tslib_1.__param(1, Optional()),
    tslib_1.__metadata("design:paramtypes", [String, MessageService])
], LocalizationService);
export { LocalizationService };
