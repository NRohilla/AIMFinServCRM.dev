import * as tslib_1 from "tslib";
import { EventEmitter, ElementRef, Directive, Output } from '@angular/core';
import Draggable from '@telerik/kendo-draggable';
/**
 * @hidden
 */
let KendoDraggableDirective = class KendoDraggableDirective {
    constructor(ngEl) {
        this.kendoDrag = new EventEmitter();
        this.kendoPress = new EventEmitter();
        this.kendoRelease = new EventEmitter();
        this.draggable = new Draggable({
            drag: (e) => {
                if (e.hasOwnProperty("originalEvent")) {
                    e.originalEvent.preventDefault();
                }
                this.kendoDrag.next(e);
            },
            press: (e) => this.kendoPress.next(e),
            release: (e) => this.kendoRelease.next(e)
        });
        this.draggable.bindTo(ngEl.nativeElement);
    }
    ngOnDestroy() {
        this.draggable.destroy();
    }
};
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], KendoDraggableDirective.prototype, "kendoDrag", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], KendoDraggableDirective.prototype, "kendoPress", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], KendoDraggableDirective.prototype, "kendoRelease", void 0);
KendoDraggableDirective = tslib_1.__decorate([
    Directive({
        selector: '[kendoDraggable]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef])
], KendoDraggableDirective);
export { KendoDraggableDirective };
